From 1820dc3da97e79caf7e207bacc0daf6e878f87a1 Mon Sep 17 00:00:00 2001
From: KP Singh <kpsingh@google.com>
Date: Wed, 2 Oct 2019 18:20:24 +0200
Subject: [PATCH] samples/bpf: Fix broken samples.

Rename asm_goto_workaround.h to asm_workaround.h and add a
workaround for the newly added "asm_inline" in:

  commit eb111869301e ("compiler-types.h: add asm_inline definition")

Add missing include for <linux/perf_event.h> which was removed from
perf-sys.h in:

  commit 91854f9a077e ("perf tools: Move everything related to
	               sys_perf_event_open() to perf-sys.h")

Co-developed-by: Florent Revest <revest@google.com>
Signed-off-by: Florent Revest <revest@google.com>
Signed-off-by: KP Singh <kpsingh@google.com>
---
 samples/bpf/Makefile              |  2 +-
 samples/bpf/asm_goto_workaround.h | 17 -----------------
 samples/bpf/asm_workaround.h      | 28 ++++++++++++++++++++++++++++
 samples/bpf/task_fd_query_user.c  |  1 +
 4 files changed, 30 insertions(+), 18 deletions(-)
 delete mode 100644 samples/bpf/asm_goto_workaround.h
 create mode 100644 samples/bpf/asm_workaround.h

diff --git a/samples/bpf/Makefile b/samples/bpf/Makefile
index 42b571cde177..ab2b4d7ecb4b 100644
--- a/samples/bpf/Makefile
+++ b/samples/bpf/Makefile
@@ -289,7 +289,7 @@ $(obj)/%.o: $(src)/%.c
 		-Wno-gnu-variable-sized-type-not-at-end \
 		-Wno-address-of-packed-member -Wno-tautological-compare \
 		-Wno-unknown-warning-option $(CLANG_ARCH_ARGS) \
-		-I$(srctree)/samples/bpf/ -include asm_goto_workaround.h \
+		-I$(srctree)/samples/bpf/ -include asm_workaround.h \
 		-O2 -emit-llvm -c $< -o -| $(LLC) -march=bpf $(LLC_FLAGS) -filetype=obj -o $@
 ifeq ($(DWARF2BTF),y)
 	$(BTF_PAHOLE) -J $@
diff --git a/samples/bpf/asm_goto_workaround.h b/samples/bpf/asm_goto_workaround.h
deleted file mode 100644
index 7409722727ca..000000000000
--- a/samples/bpf/asm_goto_workaround.h
+++ /dev/null
@@ -1,17 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-/* Copyright (c) 2019 Facebook */
-#ifndef __ASM_GOTO_WORKAROUND_H
-#define __ASM_GOTO_WORKAROUND_H
-
-/* this will bring in asm_volatile_goto macro definition
- * if enabled by compiler and config options.
- */
-#include <linux/types.h>
-
-#ifdef asm_volatile_goto
-#undef asm_volatile_goto
-#define asm_volatile_goto(x...) asm volatile("invalid use of asm_volatile_goto")
-#endif
-
-#define volatile(x...) volatile("")
-#endif
diff --git a/samples/bpf/asm_workaround.h b/samples/bpf/asm_workaround.h
new file mode 100644
index 000000000000..7c99ea6ae98c
--- /dev/null
+++ b/samples/bpf/asm_workaround.h
@@ -0,0 +1,28 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+/* Copyright (c) 2019 Facebook */
+#ifndef __ASM_WORKAROUND_H
+#define __ASM_WORKAROUND_H
+
+/*
+ * This will bring in asm_volatile_goto and asm_inline macro definitions
+ * if enabled by compiler and config options.
+ */
+#include <linux/types.h>
+
+#ifdef asm_volatile_goto
+#undef asm_volatile_goto
+#define asm_volatile_goto(x...) asm volatile("invalid use of asm_volatile_goto")
+#endif
+
+/*
+ * asm_inline is defined as asm __inline in "include/linux/compiler_types.h"
+ * if supported by the kernel's CC (i.e CONFIG_CC_HAS_ASM_INLINE) which is not
+ * supported by CLANG.
+ */
+#ifdef asm_inline
+#undef asm_inline
+#define asm_inline asm
+#endif
+
+#define volatile(x...) volatile("")
+#endif
diff --git a/samples/bpf/task_fd_query_user.c b/samples/bpf/task_fd_query_user.c
index e39938058223..4c31b305e6ef 100644
--- a/samples/bpf/task_fd_query_user.c
+++ b/samples/bpf/task_fd_query_user.c
@@ -13,6 +13,7 @@
 #include <sys/resource.h>
 #include <sys/types.h>
 #include <sys/stat.h>
+#include <linux/perf_event.h>
 
 #include "libbpf.h"
 #include "bpf_load.h"
-- 
2.20.1

